library(e1071)
model_naive <- naiveBayes(formula = Purchased ~ .,
data = cust_behaviour)
# Please run the code down below
model_naive
# Please run the code down below
diva <- data.frame(Gender = "Female",
Age = "< 30",
Salary = "High")
# Please type your code down below
predict_result <-
predict(object = model_naive,
newdata = diva,
type = "raw")
predict_result[ ,1]
ifelse(test = predict_result[ ,1] > 0.8, yes = "No", no = "Yes")
# Please type your code down below
predict(object = model_naive,
newdata = diva,
type = "class")
matrix(c(127, 130, 0, 143), nrow = 2, dimnames = list(c("Female", "Male"), c("No Purchase", "Purchase")))
(143/(143+257) * 1/(1+144) * 5/(5+46+95) * 76/(76+40+30)) /
(143/(143+257) * 1/(1+144) * 5/(5+46+95) * 76/(76+40+30) +
257/(143+257) * 128/(128+131) * 97/(97+5+158) * 20/(20+57+183))
# Please run the code down below
# Modeling
model_naive2 <- naiveBayes(formula = Purchased ~ . ,
data = cust_behaviour,
laplace = 1)
# Predict
predict(model_naive2, newdata = diva, type = "raw")
knitr::include_graphics("assets/text_mining.png")
# Please run the code down below
sms_raw <- read.csv("data_input/spam.csv",
stringsAsFactors = FALSE,
encoding = "UTF-8")
head(sms_raw)
# Please type your code down below
sms_clean <-
sms_raw %>%
select(-c(X, X.1, X.2)) %>%
mutate(v1 = as.factor(v1))
# Please type your code down below
sms_clean %>%
filter(v1 %in% "spam") %>%
head(5)
# Please type your code down below
library(tm)
sms.corpus <- VCorpus(VectorSource(sms_clean$v2))
# Please run the code down below
sms_clean[1,2]
# Please run the code down below
sms.corpus[[1]]$content
sms.corpus
sms.corpus[[1]]
sms.corpus
# Please run the code down below
sms.corpus[[1]]$Metadata
# Please run the code down below
sms.corpus[[1]]$meta
# Please run the code down below
sms.corpus[[1]]$meta$author
# Please run the code down below
sms.corpus[[1]]$content
# Please run the code down below
lapply(sms.corpus[1:3]$content, as.character)
sms.corpus[1:3]$content
# Please run the code down below
sms.corpus[[9]]$content
# Please run the code down below
sms.corpus[[9]]$content
# Please type your code down below
sms.corpus <- tm_map(x = sms.corpus,
FUN = content_transformer(tolower))
# inspect content sms ke-9
sms.corpus[[9]]$content
# Menghapus angka
sms.corpus <- tm_map(x = sms.corpus,
FUN = removeNumbers())
# Menghapus angka
sms.corpus <- tm_map(x = sms.corpus,
FUN = removeNumbers)
# cek content sms ke-9
sms.corpus[[9]]$content
# Menghapus stopwords
sms.corpus <- tm_map(x = sms.corpus,
FUN = stopwords)
# Menghapus stopwords
sms.corpus <- tm_map(x = sms.corpus,
FUN = removeWords, stopwords('english'))
# cek content sms ke-9
sms.corpus[[9]]$content
gsub(x = x,
pattern = pattern,
replacement = " ")
# Please run the code down below
transformer <- content_transformer(FUN = function(x, pattern){
gsub(x = x,
pattern = pattern,
replacement = " ")
})
# Please run the code down below
# replace ".", "/", "@", "-" with a white space
# Ingin me-replace tanda / dengan spasi
sms.corpus <- tm_map(sms.corpus, transformer, "/")
#ingin me-replace tanda @ dengan spasi
sms.corpus <- tm_map(sms.corpus, transformer, "@")
sms.corpus <- tm_map(sms.corpus, transformer, "-")
sms.corpus <- tm_map(sms.corpus, transformer, "\\.")
# cek content ke-9
sms.corpus[[9]]$content
sms.corpus <- tm_map(sms.corpus, transformer, "!")
# cek content ke-9
sms.corpus[[9]]$content
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 9999)
# Cara mengisi nilai missing
library(zoo)
z <- zoo(c(NA, 2, NA, 1, 4, 5, 2, NA))
na.fill(object = z, fill = 0)
knitr::include_graphics("assets/venn.png")
knitr::include_graphics("assets/venn.gif")
# Please run the code down below
library(dplyr)
cust_behaviour <- read.csv("data_input/Customer_Behaviour.csv",
stringsAsFactors = T)
glimpse(cust_behaviour)
# Proporsi customer membeli dan tidak membeli
prop.table(table(cust_behaviour$Purchased))
# Peluang Customer Membeli
p_purchase <- 0.3575
# Peluang Customer Tidak Membeli
p_not_purchase <- 0.6425
# Please run the code down below
table(cust_behaviour$Gender, cust_behaviour$Purchased)
# Please type your code down below
p_female_purchase <- 77 / (77 + 66)
# Please type your code down below
p_female_not_purchase <- 127 / (127 + 130)
p_female_purchase + p_female_not_purchase
# Please run the code down below
table(cust_behaviour$Age, cust_behaviour$Purchased)
# Please type your code down below
p_age30_purchase <-  4 / (4 + 45 + 94)
# Please type your code down below
p_age30_not_purchase <- 96 / (96 + 4 +157)
# Please run the code down below
table(cust_behaviour$Salary, cust_behaviour$Purchased)
# Please type your code down below
p_high_purchase <- 75 / (75 + 39 + 29)
# Please type your code down below
p_high_not_purchase <- 19 / (19 + 56 + 182)
# Please run the code down below
(p_purchase * p_female_purchase * p_age30_purchase * p_high_purchase) /
(p_purchase * p_female_purchase * p_age30_purchase * p_high_purchase +
p_not_purchase * p_female_not_purchase * p_age30_not_purchase * p_high_not_purchase)
# Please type your code
#install.packages("e1071")
library(e1071)
model_naive <- naiveBayes(formula = Purchased ~ .,
data = cust_behaviour)
# Please run the code down below
model_naive
# Please run the code down below
diva <- data.frame(Gender = "Female",
Age = "< 30",
Salary = "High")
# Please type your code down below
predict_result <-
predict(object = model_naive,
newdata = diva,
type = "raw")
predict_result[ ,1]
ifelse(test = predict_result[ ,1] > 0.8, yes = "No", no = "Yes")
# Please type your code down below
predict(object = model_naive,
newdata = diva,
type = "class")
matrix(c(127, 130, 0, 143), nrow = 2, dimnames = list(c("Female", "Male"), c("No Purchase", "Purchase")))
(143/(143+257) * 1/(1+144) * 5/(5+46+95) * 76/(76+40+30)) /
(143/(143+257) * 1/(1+144) * 5/(5+46+95) * 76/(76+40+30) +
257/(143+257) * 128/(128+131) * 97/(97+5+158) * 20/(20+57+183))
# Please run the code down below
# Modeling
model_naive2 <- naiveBayes(formula = Purchased ~ . ,
data = cust_behaviour,
laplace = 1)
# Predict
predict(model_naive2, newdata = diva, type = "raw")
knitr::include_graphics("assets/text_mining.png")
# Please run the code down below
sms_raw <- read.csv("data_input/spam.csv",
stringsAsFactors = FALSE,
encoding = "UTF-8")
head(sms_raw)
# Please type your code down below
sms_clean <-
sms_raw %>%
select(-c(X, X.1, X.2)) %>%
mutate(v1 = as.factor(v1))
# Please type your code down below
sms_clean %>%
filter(v1 %in% "spam") %>%
head(5)
# Please type your code down below
library(tm)
sms.corpus <- VCorpus(VectorSource(sms_clean$v2))
# Please run the code down below
sms_clean[1,2]
# Please run the code down below
sms.corpus[[1]]$content
# Please run the code down below
lapply(sms.corpus[1:3]$content, as.character)
# Please run the code down below
sms.corpus[[9]]$content
# Please type your code down below
sms.corpus <- tm_map(x = sms.corpus,
FUN = content_transformer(tolower))
# inspect content sms ke-9
sms.corpus[[9]]$content
# Please type your code down below
# Menghapus angka
sms.corpus <- tm_map(x = sms.corpus,
FUN = removeNumbers)
# cek content sms ke-9
sms.corpus[[9]]$content
# Menghapus stopwords
sms.corpus <- tm_map(x = sms.corpus,
FUN = removeWords, stopwords('english'))
# cek content sms ke-9
sms.corpus[[9]]$content
# Please run the code down below
transformer <- content_transformer(FUN = function(x, pattern){
gsub(x = x,
pattern = pattern,
replacement = " ")
})
# Please run the code down below
lapply(sms.corpus[4:50]$content, as.character)
sms.corpus <- tm_map(sms.corpus, transformer, "\\'")
# cek content ke-9
sms.corpus[[3]]$content
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 9999)
# Cara mengisi nilai missing
library(zoo)
z <- zoo(c(NA, 2, NA, 1, 4, 5, 2, NA))
na.fill(object = z, fill = 0)
knitr::include_graphics("assets/venn.png")
knitr::include_graphics("assets/venn.gif")
# Please run the code down below
library(dplyr)
cust_behaviour <- read.csv("data_input/Customer_Behaviour.csv",
stringsAsFactors = T)
glimpse(cust_behaviour)
# Proporsi customer membeli dan tidak membeli
prop.table(table(cust_behaviour$Purchased))
# Peluang Customer Membeli
p_purchase <- 0.3575
# Peluang Customer Tidak Membeli
p_not_purchase <- 0.6425
# Please run the code down below
table(cust_behaviour$Gender, cust_behaviour$Purchased)
# Please type your code down below
p_female_purchase <- 77 / (77 + 66)
# Please type your code down below
p_female_not_purchase <- 127 / (127 + 130)
p_female_purchase + p_female_not_purchase
# Please run the code down below
table(cust_behaviour$Age, cust_behaviour$Purchased)
# Please type your code down below
p_age30_purchase <-  4 / (4 + 45 + 94)
# Please type your code down below
p_age30_not_purchase <- 96 / (96 + 4 +157)
# Please run the code down below
table(cust_behaviour$Salary, cust_behaviour$Purchased)
# Please type your code down below
p_high_purchase <- 75 / (75 + 39 + 29)
# Please type your code down below
p_high_not_purchase <- 19 / (19 + 56 + 182)
# Please run the code down below
(p_purchase * p_female_purchase * p_age30_purchase * p_high_purchase) /
(p_purchase * p_female_purchase * p_age30_purchase * p_high_purchase +
p_not_purchase * p_female_not_purchase * p_age30_not_purchase * p_high_not_purchase)
# Please type your code
#install.packages("e1071")
library(e1071)
model_naive <- naiveBayes(formula = Purchased ~ .,
data = cust_behaviour)
# Please run the code down below
model_naive
# Please run the code down below
diva <- data.frame(Gender = "Female",
Age = "< 30",
Salary = "High")
# Please type your code down below
predict_result <-
predict(object = model_naive,
newdata = diva,
type = "raw")
predict_result[ ,1]
ifelse(test = predict_result[ ,1] > 0.8, yes = "No", no = "Yes")
# Please type your code down below
predict(object = model_naive,
newdata = diva,
type = "class")
matrix(c(127, 130, 0, 143), nrow = 2, dimnames = list(c("Female", "Male"), c("No Purchase", "Purchase")))
(143/(143+257) * 1/(1+144) * 5/(5+46+95) * 76/(76+40+30)) /
(143/(143+257) * 1/(1+144) * 5/(5+46+95) * 76/(76+40+30) +
257/(143+257) * 128/(128+131) * 97/(97+5+158) * 20/(20+57+183))
# Please run the code down below
# Modeling
model_naive2 <- naiveBayes(formula = Purchased ~ . ,
data = cust_behaviour,
laplace = 1)
# Predict
predict(model_naive2, newdata = diva, type = "raw")
knitr::include_graphics("assets/text_mining.png")
# Please run the code down below
sms_raw <- read.csv("data_input/spam.csv",
stringsAsFactors = FALSE,
encoding = "UTF-8")
head(sms_raw)
# Please type your code down below
sms_clean <-
sms_raw %>%
select(-c(X, X.1, X.2)) %>%
mutate(v1 = as.factor(v1))
# Please type your code down below
sms_clean %>%
filter(v1 %in% "spam") %>%
head(5)
# Please type your code down below
library(tm)
sms.corpus <- VCorpus(VectorSource(sms_clean$v2))
# Please run the code down below
sms_clean[1,2]
# Please run the code down below
sms.corpus[[1]]$content
# Please run the code down below
lapply(sms.corpus[4:5]$content, as.character)
# Please run the code down below
sms.corpus[[9]]$content
# Please type your code down below
sms.corpus <- tm_map(x = sms.corpus,
FUN = content_transformer(tolower))
# inspect content sms ke-9
sms.corpus[[9]]$content
# Please type your code down below
# Menghapus angka
sms.corpus <- tm_map(x = sms.corpus,
FUN = removeNumbers)
# cek content sms ke-9
sms.corpus[[9]]$content
# Menghapus stopwords
sms.corpus <- tm_map(x = sms.corpus,
FUN = removeWords, stopwords('english'))
# cek content sms ke-9
sms.corpus[[9]]$content
# Please run the code down below
transformer <- content_transformer(FUN = function(x, pattern){
gsub(x = x,
pattern = pattern,
replacement = " ")
})
# Please run the code down below
lapply(sms.corpus[51:100]$content, as.character)
# Please run the code down below
lapply(sms.corpus[51:100]$content, as.character)
# Please run the code down below
sms.corpus[[70]]$content
# Please run the code down below
sms.corpus[[69]]$content
# cek content ke-9
sms.corpus[[69]]$content
sms.corpus <- tm_map(sms.corpus, transformer, "\\\"")
# cek content ke-9
sms.corpus[[69]]$content
sms.corpus <- tm_map(sms.corpus, transformer, "\\\\")
# cek content ke-9
sms.corpus[[69]]$content
wordStem(c("do", "doing", "kicked", "kick"))
# Please run the code down below
library(SnowballC)
wordStem(c("do", "doing", "kicked", "kick"))
# Please type your code down below
sms.corpus <- tm_map(x = sms.corpus,
FUN = stemDocument)
# cek content ke-9
sms.corpus[[9]]$content
# remove white space
sms.corpus <- tm_map(x = sms.corpus,
FUN = stripWhitespace())
# remove white space
sms.corpus <- tm_map(x = sms.corpus,
FUN = stripWhitespace)
# inspect content sms ke-9
sms.corpus[[9]]$content
sms.corpus <- tm_map(sms.corpus, transformer, "!")
# inspect content sms ke-9
sms.corpus[[9]]$content
# remove white space
sms.corpus <- tm_map(x = sms.corpus,
FUN = stripWhitespace)
# inspect content sms ke-9
sms.corpus[[9]]$content
sms.corpus <- tm_map(sms.corpus, transformer, "\\.)
sms.corpus <- tm_map(sms.corpus, transformer, "\\.")
sms.corpus <- tm_map(sms.corpus, transformer, "\\.")
# inspect content sms ke-9
sms.corpus[[9]]$content
# remove white space
sms.corpus <- tm_map(x = sms.corpus,
FUN = stripWhitespace)
# inspect content sms ke-9
sms.corpus[[9]]$content
# Please type your code down below
sms.dtm <- DocumentTermMatrix(sms.corpus)
# cek singkat struktur dtm
inspect(sms.dtm)
sms.corpus[[1085]]$content
RNGkind(sample.kind = "Rounding")
set.seed(100)
# Index Sampling
index <- sample(nrow(sms.dtm), nrow(sms.dtm)*0.75)
# Implementasi Splitting ke Data Train
sms_train <- sms.dtm[index,]
# Implementasi Splitting ke Data Test
sms_test <- sms.dtm[-index,]
# label untuk train dan test, tersimpan pada dataframe sms_celan
# Label data train
label_train <- sms_clean[index, "v1"]
# Label data test
label_test <- sms_clean[-index, "v1"]
# Please type your code down below
sms_freq <- findFreqTerms(x = sms_train, # object data train
lowfreq = 20) # minimal frekuensi
length(sms_freq)
sms_freq
sms_train
# Please type your code down below
# Data Train
sms_train <-  sms_train[,sms_freq]
# Data Test
sms_test <-  sms_test[,sms_freq]
# Please type your code down below
sms_train[1]$content
# Please type your code down below
sms_train[[1]]$content
# Please type your code down below
sms_train[[1]]$Content
# Please type your code down below
sms_train
# Please type your code down below
sms_train[[1]]$content
# Please type your code down below
sms_train[]1,
# Please type your code down below
sms_train[1,]
# Please run the code down below
bernoulli_conv <- function(x){
x <- as.factor(ifelse(x > 0, 1, 0))
return(x)
}
# Please type your code down below
# Data train
sms_train_bn <- apply(X = sms_train,
MARGIN = 2,
FUN = bernoulli_conv)
# Data test
sms_test_bn <- apply(X = sms_test,
MARGIN = 2,
FUN = bernoulli_conv)
sms_train_bn[15:25, 35:40]
label_train
# Please type your code down below
naive_spam <- naiveBayes(x = sms_train_bn,
y = label_train,
laplace = 1)
# Please type your code down below
sms_pred_class <- predict(naive_spam, newdata=label_test, type='raw')
sms_pred_class
# Please type your code down below
sms_pred_class <- predict(naive_spam, newdata=sms_test_bn, type='class')
sms_pred_class
label_train
confusionMatrix(data = sms_pred_class,
reference = label_train,
positive = 1)
library(caret)
confusionMatrix(data = sms_pred_class,
reference = label_train,
positive = 'spam')
confusionMatrix(data = sms_pred_class,
reference = label_test,
positive = 'spam')
