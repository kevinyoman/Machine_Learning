birth_dc %>%
autoplot()
knitr::include_graphics("assets/aditif vs multiplikatif.png")
birth_ts %>%
autoplot()
AirPassengers %>%
autoplot()
# menggunakan AirPassenger
AirPassengers %>% autoplot()
log(AirPassengers) %>% autoplot()
decompose(log(AirPassengers)) %>% autoplot()
# menggunakan AirPassenger
air_dc <- decompose(AirPassengers)
decompose(AirPassengers, type = "multiplicative") %>% autoplot()
# data original
autoplot(birth_ts)
# hasil informasi trend dari fungsi `decompose`
birth_dc$trend %>%
autoplot()
birth_trend <- ma(birth_ts, order = 12, # sesuai frequency
centre = T) # agar dihitung menggunakan center moving average
birth_trend %>% autoplot() + theme_minimal()
# hasil pola seasonal dari proses decompose
birth_dc$seasonal %>%
autoplot()
# Detrend time series
birth_seas_er <- birth_ts - birth_trend
autoplot(birth_seas_er)
# mean of each month
mean_month_birth <- birth_seas_er %>%
matrix(ncol = 12, byrow = T) %>% # ubah menjadi matrix 12 kolom (bulan)
colMeans(na.rm = T) # hitung rata-rata per bulan
# mean global
mean_glob_birth <- mean(mean_month_birth) # adjusting seasonal
# seasonality calculation
seas_birth <- mean_month_birth - mean_glob_birth
# make it repetitive just like time series data
birth_seasonal <- ts(data = rep(seas_birth, 14), # for 14 years
start = start(birth_ts),
frequency = 12)
# plot it
birth_seasonal %>% autoplot() + theme_minimal()
# hasil informasi error dari fungsi `decompose`
birth_dc$random %>%
autoplot()
birth_error <- birth_ts - birth_trend - birth_seasonal
birth_error %>% autoplot()
birth_recomp <- birth_trend + birth_seasonal + birth_error
autoplot(birth_recomp) + theme_minimal()
seas_data <- birth %>%
mutate(seasonal = birth_dc$seasonal, # simpan seasonal hasil decompose
month = month(ymd(date), label = T, abbr = T)) %>% # ambil informasi bulan
distinct(month, seasonal) # ambil unique dari tiap bulan & seasonal
seas_data
# ploting
seas_data %>%
ggplot(mapping = aes(x = month, y = seasonal)) +
geom_col() +
theme_minimal()
library(xts)
# birth_ts
as.xts(birth_dc$x - birth_dc$seasonal) %>%
autoplot() %>%
plotly::ggplotly()
# read data rain
rain <- scan("data_input/precip1.dat", skip = 1)
head(rain)
rain_ts <- ts(data = rain, freq = 1)
rain_ts %>%
autoplot()
model_sma_3 <-SMA(x = rain_ts, n = 3)
model_sma_12 <-SMA(x = rain_ts, n = 12)
rain_ts %>%
autoplot() +
autolayer(model_sma_3) +
autolayer(model_sma_12)
# your code here
assault_ts <- ts(assault$Amount_Assault, start=2014-01-01, frequency=365)
# your code here
assault <- read.csv("assault.csv")
assault$Date <- ymd(assault$Date)
assault <- assault %>% arrange(Date) %>% pad()
# your code here
assault_ts <- ts(assault$Amount_Assault, start=2014-01-01, frequency=365)
# your code here
model_ts <- decompose(assault_ts, type='additive')
autoplot(model_ts)
# your code here
train_ts <- decompose(train_assault)
# your code here
test_assault <- tail(assault_ts, 365)
train_assault <- head(assault_ts, length(assault_ts)-365)
# your code here
train_ts <- decompose(train_assault)
test_ts <- decompose(test_assault)
autoplot(gas_ts)
autoplot(gas_ts)
# 10 tahun terakhir sebagai data test
gas_train <- head(gas_ts, length(gas_ts)-10)
gas_test <- tail(gas_ts, 10)
decompose(gas_train)
decompose(gas_test)
# your code
model_gas <- HoltWinters(gas_train)
gas_train
# your code
model_gas <- HoltWinters(gas_train, gamma=F)
# test_ts <- decompose(test_assault)
train_ts %>% autoplot()
# print model
model_gas
# print model
model_gas %>% autoplot()
# print model
model_gas
forecast_gas <- forecast(model_gas)
forecast_gas <- forecast(model_gas, h=10)
forecast_gas <- forecast(model_gas, h=10)
# print result
forecast_gas
# visualisasi: prediksi vs aktual
gas_ts %>% autoplot()
# visualisasi: prediksi vs aktual
gas_ts %>% autoplot() +
autolayer(forecast_gas$mean)
# visualisasi: prediksi vs aktual
gas_ts %>% autoplot() +
autolayer(forecast_gas$mean, series='Result')
# visualisasi: prediksi vs aktual
gas_ts %>% autoplot() +
autolayer(forecast_gas$mean, series='Prediction result')
# cara visualisasi lain: perbandingan prediksi dan aktual
library(TSstudio)
test_forecast(actual = gas_ts, # data aktual full
forecast.obj = forecast_gas, # hasil forecast
test = gas_test) # data test
# visualisasi: prediksi vs aktual
gas_ts %>% autoplot() +
autolayer(forecast_gas$mean, series='Prediction result') +
autolayer(model_gas$fitted)
# visualisasi: prediksi vs aktual
gas_ts %>% autoplot() +
autolayer(forecast_gas$mean, series='Prediction result') +
autolayer(model_gas$fitted[,1], series='Fitted value')
forecast_gas
forecast_gas$lower
forecast_gas$lower[,1]
forecast_gas$lower[,2]
library(MLmetrics)
# your code here
model_hw <- HoltWinters(train_assaut)
# your code here
model_hw <- HoltWinters(train_assault)
# your code here
model_hw <- HoltWinters(train_assault)
model_hw
accuracy(forecast_gas, gas_test)
birth <- read.csv("data_input/nybirth.csv")
birth
library(tidyverse)
brith$date <- ymd(birth$date)
birth$date <- ymd(birth$date)
birth
birth <- birth %>% arrange(date) %>% pad()
colSums(is.na(birth))
birth_ts <- ts(birth,frequency = 12)
birth_ts %>% autoplot()
birth_ts
birth_ts <- ts(birth$births,frequency = 12)
birth_ts %>% autoplot()
birth_ts
length(birth_ts) <- ts(birth$births,frequency = 12)
length(birth_ts)
# train
birth_train <- head(birth_ts, length(birth_ts) - 24)
birth_test
# test
birth_test <- tail(birth_ts, 24)
# train
birth_train <- head(birth_ts, length(birth_ts) - 24)
birth_test
model_all <- decompose(birth_train)
# a
model_all
# a
model_all %>% autoplot()
model_all <- HoltWinters(birth_train)
# a
model_all %>% autoplot()
# a
model_all
forecast <- forecast(model_all, h=24)
forecast_all <- test_forecast(actual = model_all$fitted, # data aktual full
forecast.obj = forecast$mean, # hasil forecast
test = gas_test) # data test
forecast_all <- test_forecast(actual = model_all$fitted, # data aktual full
forecast.obj = forecast$mean, # hasil forecast
test = birth_test) # data test
forecast_all <- test_forecast(actual = model_all$fitted, # data aktual full
forecast.obj = forecast, # hasil forecast
test = birth_test) # data test
forecast_all <- test_forecast(actual = birth_ts, # data aktual full
forecast.obj = forecast, # hasil forecast
test = birth_test) # data test
forecast_all
accuracy(forecast, birth_test)
# b
model_t1 <- HoltWinters(birth_train,alpha=1, beta=1)
forecast_t1 <- forecast(model_t1, h=24)
forecast_t1 <- test_forecast(actual = birth_ts, # data aktual full
forecast.obj = forecast_t1, # hasil forecast
test = birth_test) # data test
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
accuracy(forecast_t1, birth_test)
forecast_t1 <- forecast(model_t1, h=24)
plot_t1 <- test_forecast(actual = birth_ts, # data aktual full
forecast.obj = forecast_t1, # hasil forecast
test = birth_test) # data test
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
# b
model_t1 <- HoltWinters(birth_train,alpha=0.1, beta=0.1, gamma=0.1)
plot_t1 <- test_forecast(actual = birth_ts, # data aktual full
forecast.obj = forecast_t1, # hasil forecast
test = birth_test) # data test
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
# b
model_t1 <- HoltWinters(birth_train,alpha=0.01, beta=0.01, gamma=0.01)
forecast_t1 <- forecast(model_t1, h=24)
plot_t1 <- test_forecast(actual = birth_ts, # data aktual full
forecast.obj = forecast_t1, # hasil forecast
test = birth_test) # data test
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
# b
model_t1 <- HoltWinters(birth_train,beta=0.1, gamma=0.1)
plot_t1 <- test_forecast(actual = birth_ts, # data aktual full
forecast.obj = forecast_t1, # hasil forecast
test = birth_test) # data test
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
# b
model_t1 <- HoltWinters(birth_train,alpha=0.1, beta=0.1, gamma=0.9)
plot_t1 <- test_forecast(actual = birth_ts, # data aktual full
forecast.obj = forecast_t1, # hasil forecast
test = birth_test) # data test
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
# b
model_t1 <- HoltWinters(birth_train,alpha=0.1, beta=0.1, gamma=0.1)
plot_t1 <- test_forecast(actual = birth_ts, # data aktual full
forecast.obj = forecast_t1, # hasil forecast
test = birth_test) # data test
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
# b
model_t1 <- HoltWinters(birth_train, beta=0.1, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
# b
model_t1 <- HoltWinters(birth_train, alpha=1, beta=1, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast, birth_test)
accuracy(forecast_t1, birth_test)
# a
model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.1, beta=0.1, gamma=0.1)
forecast <- forecast(model_all, h=24)
forecast_t1 <- forecast(model_t1, h=24)
# plot_all <- test_forecast(actual = birth_ts, # data aktual full
#               forecast.obj = forecast, # hasil forecast
#               test = birth_test) # data test
#
# plot_t1 <- test_forecast(actual = birth_ts, # data aktual full
#               forecast.obj = forecast_t1, # hasil forecast
#               test = birth_test) # data test
accuracy(forecast_t1, birth_test)
# b
model_t1 <- HoltWinters(birth_train, alpha=0.1, beta=0.5, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.1, beta=0.5, gamma=0.5)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.1, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.2, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.05, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.15, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.2, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.18, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.15, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.16, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.14, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.15, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.13, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.11, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.1)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.2)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.3)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.4)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.5)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.45)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.4)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.43)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.42)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.4)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.35)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.3)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.2, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.25, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.3, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.35, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.32, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.33, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.15, beta=0.33, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.33, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.34, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.33, gamma=0.35)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# a
# model_all
# b
model_t1 <- HoltWinters(birth_train, alpha=0.12, beta=0.33, gamma=0.34)
forecast_t1 <- forecast(model_t1, h=24)
accuracy(forecast_t1, birth_test)
# read data environment_1970f.csv
no <- read.csv("data_input/environment_1970f.csv")
head(no)
